// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using english_master.DAL;

#nullable disable

namespace english_master.DAL.Migrations
{
    [DbContext(typeof(EnglishMasterDbContext))]
    [Migration("20250804170444_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PracticeSetTemplateWord", b =>
                {
                    b.Property<int>("SetsId")
                        .HasColumnType("integer");

                    b.Property<string>("WordsId")
                        .HasColumnType("character varying(36)");

                    b.HasKey("SetsId", "WordsId");

                    b.HasIndex("WordsId");

                    b.ToTable("PracticeSetTemplateWord");
                });

            modelBuilder.Entity("english_master.Models.PracticeSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PracticeSets");
                });

            modelBuilder.Entity("english_master.Models.PracticeSetTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PracticeSetTemplates");
                });

            modelBuilder.Entity("english_master.Models.Result", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<int>("PracticeSetId")
                        .HasColumnType("integer");

                    b.Property<string>("WordId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("PracticeSetId");

                    b.HasIndex("WordId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("english_master.Models.Topic", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("english_master.Models.Word", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TopicId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("PracticeSetTemplateWord", b =>
                {
                    b.HasOne("english_master.Models.PracticeSetTemplate", null)
                        .WithMany()
                        .HasForeignKey("SetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("english_master.Models.Word", null)
                        .WithMany()
                        .HasForeignKey("WordsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("english_master.Models.Result", b =>
                {
                    b.HasOne("english_master.Models.PracticeSet", "PracticeSet")
                        .WithMany("Results")
                        .HasForeignKey("PracticeSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("english_master.Models.Word", "Word")
                        .WithMany("Results")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PracticeSet");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("english_master.Models.Word", b =>
                {
                    b.HasOne("english_master.Models.Topic", "Topic")
                        .WithMany("Words")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("english_master.Models.PracticeSet", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("english_master.Models.Topic", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("english_master.Models.Word", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
